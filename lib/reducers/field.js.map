{"version":3,"sources":["reducers/field.js"],"names":["focus","blur","touch","change","updateValidity","register","unregister","setValidateStart","setValidateSucceed","setValidateFailed","startPending","stopPending","state","action","name","payload","meta","$set","$apply","data","touched","value","nextValue","validity","Object","keys","reduce","nextMeta","key","error","validating","$merge","pending"],"mappings":"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","file":"field.js","sourcesContent":["/**\n * @file field reducer\n * @author leon <ludafa@outlook.com>\n */\n\nimport update from 'react-addons-update';\nimport {setInWithPath} from '../util/dataPathMap';\nimport {getIn, setIn, deleteIn} from '../util/dataPath';\nimport {DEFAULT_META} from '../constants';\n\nexport function focus(state, action) {\n\n    let name = action.payload.name;\n\n    return update(state, {\n        meta: {\n            [name]: {\n                focus: {$set: true}\n            }\n        }\n    });\n\n}\n\nexport function blur(state, action) {\n\n    let name = action.payload.name;\n\n    return update(state, {\n        meta: {\n            [name]: {\n                focus: {$set: false}\n            }\n        }\n    });\n\n}\n\nexport function touch(state, action) {\n\n    let name = action.payload.name;\n\n    return update(state, {\n        meta: {\n            $apply(meta) {\n                return setInWithPath(\n                    meta,\n                    name,\n                    data => ({\n                        ...data,\n                        touched: true\n                    })\n                );\n            }\n        }\n    });\n}\n\nexport function change(state, action) {\n\n    let {name, value} = action.payload;\n\n    if (getIn(state.value) === value) {\n        return state;\n    }\n\n    const nextValue = setIn(\n        state.value,\n        name,\n        value\n    );\n\n    return update(state, {\n        meta: {\n            $apply(meta) {\n                return setInWithPath(\n                    meta,\n                    name,\n                    data => ({\n                        ...data,\n                        touched: true\n                    })\n                );\n            }\n        },\n        value: {\n            $set: nextValue\n        }\n    });\n\n}\n\nexport function updateValidity(state, action) {\n\n    let validity = action.payload.validity;\n\n    return update(state, {\n        meta: {\n            $apply(meta) {\n                return Object\n                    .keys(meta)\n                    .reduce((nextMeta, key) => {\n\n                        nextMeta[key] = {\n                            ...meta[key],\n                            error: validity && validity[key] || ''\n                        };\n\n                        return nextMeta;\n\n                    }, {});\n            }\n        }\n    });\n\n}\n\nexport function register(state, action) {\n\n    return update(state, {\n        meta: {\n            [action.payload.name]: {\n                $set: DEFAULT_META\n            }\n        }\n    });\n\n}\n\nexport function unregister(state, action) {\n    return update(state, {\n        meta: {\n            $apply(meta) {\n                return deleteIn(meta, action.payload.name);\n            }\n        }\n    });\n}\n\nexport function setValidateStart(state, action) {\n\n    let name = action.payload.name;\n\n    return update(state, {\n\n        meta: {\n            $apply(meta) {\n\n                return Object\n                    .keys(meta)\n                    .reduce((nextMeta, key) => {\n\n                        nextMeta[key] = {\n                            ...meta[key],\n\n                            // 不指定 name 或者等于指定 name\n                            validating: (!name || key === name),\n\n                            // 如果是 form validate 即无 name，那么同步校验已通过，error 设置为 null\n                            // 如果是 field validate 即有 name，指定 name 的要保留，否则清空\n                            error: name === key ? null : meta[key].error\n                        };\n\n                        return nextMeta;\n\n                    }, {});\n\n            }\n        }\n\n    });\n\n}\n\nexport function setValidateSucceed(state, action) {\n\n    let name = action.payload.name;\n\n    return name\n        ? update(state, {\n            meta: {\n                [name]: {\n                    $apply(meta) {\n                        return {\n                            ...meta,\n                            validating: false,\n                            error: null\n                        };\n                    }\n                }\n            }\n        })\n        : update(state, {\n            meta: {\n                $apply(meta) {\n\n                    return Object\n                        .keys(meta)\n                        .reduce((nextMeta, key) => {\n\n                            nextMeta[key] = {\n                                ...meta[key],\n                                validating: false,\n                                error: null\n                            };\n\n                            return nextMeta;\n\n                        }, {});\n\n                }\n            }\n        });\n}\n\nexport function setValidateFailed(state, action) {\n\n    let {name, error} = action.payload;\n\n    return name\n        ? update(state, {\n            meta: {\n                [name]: {\n                    $apply(meta) {\n                        return {\n                            ...meta,\n                            validating: false,\n                            error\n                        };\n                    }\n                }\n            }\n        })\n        : update(state, {\n            meta: {\n                $apply(meta) {\n\n                    return Object\n                        .keys(meta)\n                        .reduce((nextMeta, key) => {\n\n                            nextMeta[key] = {\n                                ...meta[key],\n                                validating: false,\n                                error\n                            };\n\n                            return nextMeta;\n\n                        }, {});\n\n                }\n            }\n        });\n\n}\n\nexport function startPending(state, action) {\n    return update(state, {\n        meta: {\n            [action.payload.name]: {\n                $merge: {pending: true}\n            }\n        }\n    });\n}\n\nexport function stopPending(state, action) {\n    return update(state, {\n        meta: {\n            [action.payload.name]: {\n                $merge: {pending: false}\n            }\n        }\n    });\n}\n"]}