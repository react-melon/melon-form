{"version":3,"sources":["/src/reducers/form.js"],"names":["initialize","reset","touchAll","state","action","value","$set","meta","initialValue","$apply","hasChanged","nextMeta","key","hasOwnProperty","touched"],"mappings":";;;;;;;;;;;;;;;;YAOgBA,U,GAAAA,U;YAkBAC,K,GAAAA,K;YAWAC,Q,GAAAA,Q;;;;;;;;;;;;;;;;;;;;;;;;AA7BT,aAASF,UAAT,GAAwC;AAAA,YAApBG,KAAoB,uEAAZ,EAAY;AAAA,YAARC,MAAQ;;;AAE3C,YAAIC,QAAQF,MAAME,KAAN,IAAe,EAA3B;;AAEA,eAAO,oCAAOF,KAAP,EAAc;AACjBE,mBAAO;AACHC,sBAAMD;AADH,aADU;AAIjBE,kBAAM;AACFD,sBAAM;AADJ,aAJW;AAOjBE,0BAAc;AACVF,sBAAMD;AADI;AAPG,SAAd,CAAP;AAYH;;AAEM,aAASJ,KAAT,CAAeE,KAAf,EAAsBC,MAAtB,EAA8B;AACjC,eAAO,oCAAOD,KAAP,EAAc;AACjBE,mBAAO;AACHC,sBAAMH,MAAMK;AADT,aADU;AAIjBD,kBAAM;AACFD,sBAAM;AADJ;AAJW,SAAd,CAAP;AAQH;;AAEM,aAASJ,QAAT,CAAkBC,KAAlB,EAAyB;;AAE5B,eAAO,oCAAOA,KAAP,EAAc;AACjBI,kBAAM;AACFE,sBADE,kBACKF,IADL,EACW;;AAET,wBAAIG,aAAa,KAAjB;AACA,wBAAIC,WAAW,EAAf;;AAEA;AACA,yBAAK,IAAIC,GAAT,IAAgBL,IAAhB,EAAsB;AAClB,4BAAIA,KAAKM,cAAL,CAAoBD,GAApB,CAAJ,EAA8B;;AAE1B,gCAAIL,KAAKK,GAAL,EAAUE,OAAd,EAAuB;AACnBH,yCAASC,GAAT,IAAgBL,KAAKK,GAAL,CAAhB;AACH,6BAFD,MAGK;AACDD,yCAASC,GAAT,iBACOL,KAAKK,GAAL,CADP;AAEIE,6CAAS;AAFb;AAIAJ,6CAAa,IAAb;AACH;AACJ;AACJ;AACD;;AAEA,2BAAOA,aAAaC,QAAb,GAAwBJ,IAA/B;AACH;AAzBC;AADW,SAAd,CAAP;AA8BH","file":"form.js","sourcesContent":["/**\n * @file form reducer\n * @author leon <ludafa@outlook.com>\n */\n\nimport update from 'react-addons-update';\n\nexport function initialize(state = {}, action) {\n\n    let value = state.value || {};\n\n    return update(state, {\n        value: {\n            $set: value\n        },\n        meta: {\n            $set: {}\n        },\n        initialValue: {\n            $set: value\n        }\n    });\n\n}\n\nexport function reset(state, action) {\n    return update(state, {\n        value: {\n            $set: state.initialValue\n        },\n        meta: {\n            $set: {}\n        }\n    });\n}\n\nexport function touchAll(state) {\n\n    return update(state, {\n        meta: {\n            $apply(meta) {\n\n                let hasChanged = false;\n                let nextMeta = {};\n\n                /* eslint-disable fecs-use-for-of */\n                for (let key in meta) {\n                    if (meta.hasOwnProperty(key)) {\n\n                        if (meta[key].touched) {\n                            nextMeta[key] = meta[key];\n                        }\n                        else {\n                            nextMeta[key] = {\n                                ...meta[key],\n                                touched: true\n                            };\n                            hasChanged = true;\n                        }\n                    }\n                }\n                /* eslint-enable fecs-use-for-of */\n\n                return hasChanged ? nextMeta : meta;\n            }\n        }\n    });\n\n}\n"]}