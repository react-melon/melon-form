{"version":3,"sources":["reducers/form.js"],"names":["initialize","reset","touchAll","state","action","value","payload","$set","meta","$apply","hasChanged","nextMeta","key","hasOwnProperty","touched"],"mappings":";;;;;;;;;;;;;;;;YAUgBA,U,GAAAA,U;YAkBAC,K,GAAAA,K;YAIAC,Q,GAAAA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AAtBT,aAASF,UAAT,CAAoBG,KAApB,EAA2BC,MAA3B,EAAmC;;AAEtC,YAAIC,QAAQD,OAAOE,OAAP,CAAeD,KAA3B;;AAEA,eAAO,oCAAOF,KAAP,EAAc;AACjBE,mBAAO;AACHE,sBAAMF;AADH,aADU;AAIjBG,kBAAM;AACFD,sBAAM,4BACF,uBAAKF,KAAL,CADE,EAEF;AAAA;AAAA,iBAFE;AADJ;AAJW,SAAd,CAAP;AAYH;;AAEM,aAASJ,KAAT,CAAeE,KAAf,EAAsBC,MAAtB,EAA8B;AACjC;AACH;;AAEM,aAASF,QAAT,CAAkBC,KAAlB,EAAyB;;AAE5B,eAAO,oCAAOA,KAAP,EAAc;AACjBK,kBAAM;AACFC,sBADE,kBACKD,IADL,EACW;;AAET,wBAAIE,aAAa,KAAjB;AACA,wBAAIC,WAAW,EAAf;;AAEA;AACA,yBAAK,IAAIC,GAAT,IAAgBJ,IAAhB,EAAsB;AAClB,4BAAIA,KAAKK,cAAL,CAAoBD,GAApB,CAAJ,EAA8B;;AAE1B,gCAAIJ,KAAKI,GAAL,EAAUE,OAAd,EAAuB;AACnBH,yCAASC,GAAT,IAAgBJ,KAAKI,GAAL,CAAhB;AACH,6BAFD,MAGK;AACDD,yCAASC,GAAT,iBACOJ,KAAKI,GAAL,CADP;AAEIE,6CAAS;AAFb;AAIAJ,6CAAa,IAAb;AACH;AACJ;AACJ;AACD;;AAEA,2BAAOA,aAAaC,QAAb,GAAwBH,IAA/B;AACH;AAzBC;AADW,SAAd,CAAP;AA8BH","file":"form.js","sourcesContent":["/**\n * @file form reducer\n * @author leon <ludafa@outlook.com>\n */\n\nimport update from 'react-addons-update';\nimport mapValues from 'lodash/mapValues';\nimport {make} from '../util/dataPathMap';\nimport {DEFAULT_META} from '../constants';\n\nexport function initialize(state, action) {\n\n    let value = action.payload.value;\n\n    return update(state, {\n        value: {\n            $set: value\n        },\n        meta: {\n            $set: mapValues(\n                make(value),\n                () => DEFAULT_META\n            )\n        }\n    });\n\n}\n\nexport function reset(state, action) {\n    // TODO\n}\n\nexport function touchAll(state) {\n\n    return update(state, {\n        meta: {\n            $apply(meta) {\n\n                let hasChanged = false;\n                let nextMeta = {};\n\n                /* eslint-disable fecs-use-for-of */\n                for (let key in meta) {\n                    if (meta.hasOwnProperty(key)) {\n\n                        if (meta[key].touched) {\n                            nextMeta[key] = meta[key];\n                        }\n                        else {\n                            nextMeta[key] = {\n                                ...meta[key],\n                                touched: true\n                            };\n                            hasChanged = true;\n                        }\n                    }\n                }\n                /* eslint-enable fecs-use-for-of */\n\n                return hasChanged ? nextMeta : meta;\n            }\n        }\n    });\n\n}\n"]}