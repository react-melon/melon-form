{"version":3,"sources":["createField.js"],"names":["createField","DefaultField","props","Control","control","rest","propTypes","value","any","meta","shape","touched","bool","isRequired","validity","arrayOf","valid","message","string","name","actions","object","Field","mapStateToProps","state","model","format","data","formattedValue","mapDispatchToProps","dispatch","parse","normalize","change","ConnectedField","FormField","shouldComponentUpdate","nextProps","componentWillMount","context","register","componentWillUnmount","unregister","componentWillReceiveProps","render","contextTypes","func","defaultProps","displayName"],"mappings":"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","file":"createField.js","sourcesContent":["/**\n * @file create field\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {connect} from 'react-redux';\nimport {getFieldData} from './selectors';\nimport shallowEqual from 'shallow-equal/objects';\nimport createOnChange from './util/createOnChange';\n\n/**\n * DefaultField\n *\n * @class\n * @param {*} props 属性\n */\nfunction DefaultField(props) {\n\n    let {\n        control: Control,\n        ...rest\n    } = props;\n\n    return (\n        <Control {...rest} />\n    );\n\n}\n\nDefaultField.propTypes = {\n    value: PropTypes.any,\n    meta: PropTypes.shape({\n        touched: PropTypes.bool.isRequired\n    }),\n    validity: PropTypes.arrayOf(PropTypes.shape({\n        valid: PropTypes.bool.isRequired,\n        message: PropTypes.string\n    })),\n    name: PropTypes.string.isRequired,\n    actions: PropTypes.object.isRequired\n};\n\nexport default function createField(Field = DefaultField) {\n\n    function mapStateToProps(state, props) {\n\n        const {model, name, format} = props;\n\n        const data = getFieldData(state, model, name);\n\n        const formattedValue = format(data.value, props);\n\n        return formattedValue === data.value\n            ? data\n            : {...data, value: formattedValue};\n    }\n\n    function mapDispatchToProps(dispatch, props) {\n\n        const {\n            parse,\n            normalize,\n            actions\n        } = props;\n\n        const change = createOnChange(actions.change, {parse, normalize});\n\n        return {\n            actions: {\n                ...actions,\n                change,\n                dispatch\n            }\n        };\n    }\n\n    const ConnectedField = connect(mapStateToProps, mapDispatchToProps)(Field);\n\n    /**\n     * FormField\n     *\n     * @class\n     * @param {*} props   属性\n     * @param {Object} context 上下文\n     */\n    class FormField extends Component {\n\n        shouldComponentUpdate(nextProps) {\n            return !shallowEqual(nextProps, this.props);\n        }\n\n        componentWillMount() {\n            this.context.actions.register(this.props.name);\n        }\n\n        componentWillUnmount() {\n            this.context.actions.unregister(this.props.name);\n        }\n\n        componentWillReceiveProps(nextProps) {\n            if (this.props.name !== nextProps.name) {\n                const actions = this.context.actions;\n                actions.unregister(name);\n                actions.register(name);\n            }\n        }\n\n        render() {\n\n            const {\n                model,\n                actions\n            } = this.context;\n\n            return (\n                <ConnectedField\n                    {...this.props}\n                    actions={actions}\n                    model={model} />\n            );\n        }\n\n    }\n\n    FormField.contextTypes = {\n        actions: PropTypes.object.isRequired,\n        model: PropTypes.string.isRequired\n    };\n\n    FormField.propTypes = {\n        name: PropTypes.string.isRequired,\n        control: PropTypes.func.isRequired,\n        format: PropTypes.func,\n        parse: PropTypes.func,\n        normalize: PropTypes.func\n    };\n\n    FormField.defaultProps = {\n        format(value) {\n            return value == null ? '' : value;\n        }\n    };\n\n    FormField.displayName = `FormField(${Field.displayName || Field.name})`;\n\n    return FormField;\n\n}\n"]}