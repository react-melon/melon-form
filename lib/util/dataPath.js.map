{"version":3,"sources":["/src/util/dataPath.js"],"names":["setIn","deleteIn","compilePath","walk","getIn","setInWithPath","state","value","first","paths","next","isNaN","Array","isArray","copy","slice","path","deleteInWithPath","nextState","Object","keys","reduce","name","ARRAY_LIKE_REG","tokens","length","pathString","map","token","index","test","join","obj","iterator","cur","isCurrentArray","forEach","key","push","pop"],"mappings":"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","file":"dataPath.js","sourcesContent":["/**\n * @file data path operation\n * @author leon <ludafa@outlook.com>\n */\n\nimport get from 'lodash/get';\nimport toPath from 'lodash/toPath';\n\nexport const getIn = get;\n\nfunction setInWithPath(state, value, first, ...paths) {\n\n    if (first === void 0) {\n        return value;\n    }\n\n    let next = setInWithPath(state && state[first], value, ...paths);\n\n    if (typeof state !== 'object') {\n        state = isNaN(+first) ? {} : [];\n    }\n\n    if (Array.isArray(state)) {\n        let copy = state.slice();\n        copy[first] = next;\n        return copy;\n    }\n\n    return {\n        ...state,\n        [first]: next\n    };\n\n}\n\nexport function setIn(state, path, value) {\n    return setInWithPath(state, value, ...toPath(path));\n}\n\nfunction deleteInWithPath(state, first, ...paths) {\n\n    if (first == null || state == null) {\n        return void 0;\n    }\n\n    let next = deleteInWithPath(state && state[first], ...paths);\n\n    if (typeof state !== 'object') {\n        state = isNaN(+first) ? {} : [];\n    }\n\n    if (Array.isArray(state)) {\n\n        let copy = state.slice();\n\n        if (next !== void 0) {\n            copy[first] = next;\n            return copy;\n        }\n\n        return [\n            ...copy.slice(0, first),\n            ...copy.slice(first + 1)\n        ];\n\n    }\n\n    if (next !== void 0) {\n        return {\n            ...state,\n            [first]: next\n        };\n    }\n\n    const nextState = Object\n        .keys(state)\n        .reduce((nextState, name) => {\n\n            if (name !== first) {\n                nextState[name] = state[name];\n            }\n\n            return nextState;\n\n        }, {});\n\n    return nextState;\n\n}\n\nexport function deleteIn(state, path) {\n    return deleteInWithPath(state, ...toPath(path));\n}\n\nconst ARRAY_LIKE_REG = /^\\d+$/;\n\nexport function compilePath(tokens) {\n\n    if (!tokens || !tokens.length) {\n        return '';\n    }\n\n    const pathString = tokens\n        .map((token, index) => (\n            ARRAY_LIKE_REG.test(token) ? `[${token}]` : `.${token}`)\n        )\n        .join('');\n\n    return pathString[0] === '.' ? pathString.slice(1) : pathString;\n\n}\n\nexport function walk(obj, iterator) {\n\n    const tokens = [];\n\n    function next(cur) {\n\n        let isCurrentArray = Array.isArray(cur);\n\n        Object.keys(cur).forEach(key => {\n\n            const value = cur[key];\n\n            tokens.push(key);\n\n            if (typeof value === 'object') {\n                next(value, iterator);\n            }\n            else {\n                iterator(compilePath(tokens), value, isCurrentArray);\n            }\n\n            tokens.pop();\n\n        });\n    }\n\n    next(obj);\n\n}\n"]}