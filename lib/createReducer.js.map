{"version":3,"sources":["/src/createReducer.js"],"names":["createReducer","actionTypes","reducers","MAP","FOCUS","focus","CHANGE","change","TOUCH","touch","TOUCH_ALL","touchAll","BLUR","blur","ARRAY_SWAP","arraySwap","ARRAY_PUSH","arrayPush","ARRAY_POP","arrayPop","ARRAY_SHIFT","arrayShift","ARRAY_UNSHIFT","arrayUnshift","ARRAY_SPLICE","arraySplice","INITIALIZE","initialize","RESET","reset","VALIDITY_UPDATE","updateValidity","ASYNC_VALIDATE_START","setValidateStart","ASYNC_VALIDATE_SUCCEED","setValidateSucceed","ASYNC_VALIDATE_FAILED","setValidateFailed","REGISTER","register","UNREGISTER","unregister","PENDING_START","startPending","PENDING_STOP","stopPending","FILL_META","fillMeta","model","initialValue","customReducers","getModel","action","state","value","meta","type","payload","embedReducer","customReducer"],"mappings":";;;;;;;;;;;;;;;;sBAiCwBA,a;;QA5BZC,W;;QACAC,Q;;;;;;;;;;;;;;;;;;;;;AAEZ,QAAMC,uBACDF,YAAYG,KADX,IACmBF,SAASG,KAD5B,OAEDJ,YAAYK,MAFX,IAEoBJ,SAASK,MAF7B,OAGDN,YAAYO,KAHX,IAGmBN,SAASO,KAH5B,OAIDR,YAAYS,SAJX,IAIuBR,SAASS,QAJhC,OAKDV,YAAYW,IALX,IAKkBV,SAASW,IAL3B,OAMDZ,YAAYa,UANX,IAMwBZ,SAASa,SANjC,OAODd,YAAYe,UAPX,IAOwBd,SAASe,SAPjC,OAQDhB,YAAYiB,SARX,IAQuBhB,SAASiB,QARhC,OASDlB,YAAYmB,WATX,IASyBlB,SAASmB,UATlC,OAUDpB,YAAYqB,aAVX,IAU2BpB,SAASqB,YAVpC,OAWDtB,YAAYuB,YAXX,IAW0BtB,SAASuB,WAXnC,OAYDxB,YAAYyB,UAZX,IAYwBxB,SAASyB,UAZjC,OAaD1B,YAAY2B,KAbX,IAamB1B,SAAS2B,KAb5B,OAcD5B,YAAY6B,eAdX,IAc6B5B,SAAS6B,cAdtC,OAeD9B,YAAY+B,oBAfX,IAekC9B,SAAS+B,gBAf3C,OAgBDhC,YAAYiC,sBAhBX,IAgBoChC,SAASiC,kBAhB7C,OAiBDlC,YAAYmC,qBAjBX,IAiBmClC,SAASmC,iBAjB5C,OAkBDpC,YAAYqC,QAlBX,IAkBsBpC,SAASqC,QAlB/B,OAmBDtC,YAAYuC,UAnBX,IAmBwBtC,SAASuC,UAnBjC,OAoBDxC,YAAYyC,aApBX,IAoB2BxC,SAASyC,YApBpC,OAqBD1C,YAAY2C,YArBX,IAqB0B1C,SAAS2C,WArBnC,OAsBD5C,YAAY6C,SAtBX,IAsBuB5C,SAAS6C,QAtBhC,OAAN;;AAyBe,aAAS/C,aAAT,CAAuBgD,KAAvB,EAAsE;AAAA,YAAxCC,YAAwC,uEAAzB,EAAyB;AAAA,YAArBC,cAAqB,uEAAJ,EAAI;;;AAEjF,iBAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,mBAAO,OAAOJ,KAAP,KAAiB,UAAjB,GAA8BA,MAAMI,MAAN,CAA9B,GAA8CJ,KAArD;AACH;;AAED,eAAO,YAAqD;AAAA,gBAApDK,KAAoD,uEAA5C,EAACC,OAAOL,YAAR,EAAsBM,MAAM,EAA5B,EAA4C;AAAA,gBAAXH,MAAW;AAAA,gBAEnDI,IAFmD,GAElCJ,MAFkC,CAEnDI,IAFmD;AAAA,gBAE7CC,OAF6C,GAElCL,MAFkC,CAE7CK,OAF6C;;;AAIxD,gBAAIC,eAAevD,IAAIqD,IAAJ,CAAnB;AACA,gBAAIG,gBAAgBT,eAAeM,IAAf,CAApB;;AAEA;AACA;AACI;AACAC,uBAAWA,QAAQT,KAAR,KAAkBG,SAASC,MAAT;AAC7B;AADA,eAEI,CAACM,YAAD,IAAiB,CAACC,aAJ1B,EAKE;AACE,uBAAON,KAAP;AACH;;AAED,mBAAOM;AACH;AADG,cAEDA,cAAcN,KAAd,EAAqBD,MAArB,EAA6BM,YAA7B,CAFC,GAGDA,aAAaL,KAAb,EAAoBD,MAApB,CAHN;AAKH,SAtBD;AAuBH","file":"createReducer.js","sourcesContent":["/**\n * @file reducer\n * @author leon <ludafa@outlook.com>\n */\n\nimport * as actionTypes from './actionTypes';\nimport * as reducers from './reducers/index';\n\nconst MAP = {\n    [actionTypes.FOCUS]: reducers.focus,\n    [actionTypes.CHANGE]: reducers.change,\n    [actionTypes.TOUCH]: reducers.touch,\n    [actionTypes.TOUCH_ALL]: reducers.touchAll,\n    [actionTypes.BLUR]: reducers.blur,\n    [actionTypes.ARRAY_SWAP]: reducers.arraySwap,\n    [actionTypes.ARRAY_PUSH]: reducers.arrayPush,\n    [actionTypes.ARRAY_POP]: reducers.arrayPop,\n    [actionTypes.ARRAY_SHIFT]: reducers.arrayShift,\n    [actionTypes.ARRAY_UNSHIFT]: reducers.arrayUnshift,\n    [actionTypes.ARRAY_SPLICE]: reducers.arraySplice,\n    [actionTypes.INITIALIZE]: reducers.initialize,\n    [actionTypes.RESET]: reducers.reset,\n    [actionTypes.VALIDITY_UPDATE]: reducers.updateValidity,\n    [actionTypes.ASYNC_VALIDATE_START]: reducers.setValidateStart,\n    [actionTypes.ASYNC_VALIDATE_SUCCEED]: reducers.setValidateSucceed,\n    [actionTypes.ASYNC_VALIDATE_FAILED]: reducers.setValidateFailed,\n    [actionTypes.REGISTER]: reducers.register,\n    [actionTypes.UNREGISTER]: reducers.unregister,\n    [actionTypes.PENDING_START]: reducers.startPending,\n    [actionTypes.PENDING_STOP]: reducers.stopPending,\n    [actionTypes.FILL_META]: reducers.fillMeta\n};\n\nexport default function createReducer(model, initialValue = {}, customReducers = {}) {\n\n    function getModel(action) {\n        return typeof model === 'function' ? model(action) : model;\n    }\n\n    return (state = {value: initialValue, meta: {}}, action) => {\n\n        let {type, payload} = action;\n\n        let embedReducer = MAP[type];\n        let customReducer = customReducers[type];\n\n        // 跳过\n        if (\n            // 不是当前绑定域\n            payload && payload.model !== getModel(action)\n            // 或者无 reducer 绑定\n            || (!embedReducer && !customReducer)\n        ) {\n            return state;\n        }\n\n        return customReducer\n            // 优先使用自定义 reducer\n            ? customReducer(state, action, embedReducer)\n            : embedReducer(state, action);\n\n    };\n}\n"]}